<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="Leaf">

	<resultMap id="LeafInfoResult" type="org.pssframework.model.Leaf">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="userInfoColumns">
	    <![CDATA[
        	user_id as userId,
        	username as username,
        	password as password,
        	birth_date as birthDate,
        	sex as sex,
        	age as age
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="org.pssframework.model.Leaf" 
		useGeneratedKeys="true" keyProperty="userId" 
	>
    <![CDATA[
        INSERT INTO
        user_info (
        	user_id ,
        	username ,
        	password ,
        	birth_date ,
        	sex ,
        	age 
        ) VALUES (
        	#{userId,jdbcType=BIGINT} ,
        	#{username,jdbcType=VARCHAR} ,
        	#{password,jdbcType=VARCHAR} ,
        	#{birthDate,jdbcType=DATE} ,
        	#{sex,jdbcType=TINYINT} ,
        	#{age,jdbcType=INTEGER} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" parameterType="org.pssframework.model.Leaf">
    <![CDATA[
        UPDATE user_info SET
	        username = #{username,jdbcType=VARCHAR} ,
	        password = #{password,jdbcType=VARCHAR} ,
	        birth_date = #{birthDate,jdbcType=DATE} ,
	        sex = #{sex,jdbcType=TINYINT} ,
	        age = #{age,jdbcType=INTEGER} 
        WHERE 
	        user_id = #{userId} 
    ]]>
	</update>

    <delete id="delete" parameterType="java.lang.Long">
    <![CDATA[
        delete from user_info where
        user_id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" parameterType="java.lang.Long" resultMap="UserInfoResult">
		select <include refid="userInfoColumns" />
	    <![CDATA[
		    from user_info 
	        where 
		        user_id = #{id} 
	    ]]>
	</select>
	
	<sql id="userInfoDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(userId)">
				and user_id = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(username)">
				and username = #{username}
			</if>
	       <if test="@Ognl@isNotEmpty(password)">
				and password = #{password}
			</if>
	       <if test="@Ognl@isNotEmpty(birthDate)">
				and birth_date = #{birthDate}
			</if>
	       <if test="@Ognl@isNotEmpty(sex)">
				and sex = #{sex}
			</if>
	       <if test="@Ognl@isNotEmpty(age)">
				and age = #{age}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        select count(*) from user_info 
		<include refid="userInfoDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="UserInfoResult">
    	select <include refid="userInfoColumns" />
	    from user_info 
		<include refid="userInfoDynamicWhere"/>
		<if test="sortColumns != null and sortColumns.length() != 0">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>
