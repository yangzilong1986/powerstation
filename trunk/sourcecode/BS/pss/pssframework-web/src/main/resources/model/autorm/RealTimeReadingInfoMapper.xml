<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="RealTimeReadingInfo">
  <resultMap id="RealTimeReadingInfoResult" type="org.pssframework.model.autorm.RealTimeReadingInfo">
  </resultMap>

  <!-- 用于select查询公用抽取的列 -->
  <sql id="realTimeReadingInfoColumns">
  <!-- 目前只是台区 -->
    <if test="true">tg_no as objNo,tg_name as objName,'台区' as objType</if>
    term_addr as termAddr,
    meter_No as meterNo,
    gp_sn as gpSn
  </sql>

  <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
  <insert id="insert" parameterType="org.pssframework.model.autorm.RealTimeReadingInfo" useGeneratedKeys="true" keyProperty="userId">
    <![CDATA[
        INSERT INTO
        user_table_xx (
        	user_id ,
        	username ,
        	password ,
        	birth_date ,
        	sex ,
        	age 
        ) VALUES (
        	#{userId,jdbcType=BIGINT} ,
        	#{username,jdbcType=VARCHAR} ,
        	#{password,jdbcType=VARCHAR} ,
        	#{birthDate,jdbcType=DATE} ,
        	#{sex,jdbcType=TINYINT} ,
        	#{age,jdbcType=INTEGER} 
        )
    ]]>
    <!--
      oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL DB2: order="BEFORE"" values nextval for
      sequenceName <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId"> SELECT
      sequenceName.nextval AS ID FROM DUAL </selectKey>
    -->
  </insert>
  <update id="update" parameterType="org.pssframework.model.autorm.RealTimeReadingInfo">
    <![CDATA[
        UPDATE user_table_xx SET
	        username = #{username,jdbcType=VARCHAR} ,
	        password = #{password,jdbcType=VARCHAR} ,
	        birth_date = #{birthDate,jdbcType=DATE} ,
	        sex = #{sex,jdbcType=TINYINT} ,
	        age = #{age,jdbcType=INTEGER} 
        WHERE 
	        user_id = #{userId} 
    ]]>
  </update>
  <delete id="delete" parameterType="java.lang.Long">
    <![CDATA[
        delete from user_table_xx where
        user_id = #{id} 
    ]]>
  </delete>
  <select id="getById" parameterType="java.lang.Long" resultMap="RealTimeReadingInfoResult">
    select
    <include refid="realTimeReadingInfoColumns" />
	    <![CDATA[
		    from user_table_xx 
	        where 
		        user_id = #{id} 
	    ]]>
  </select>
  <sql id="realTimeReadingInfoDynamicWhere">
    <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
    <where>
      <if test="@Ognl@isNotEmpty(tgNo)"> and tg_no = #{tgNo}</if>
      <if test="@Ognl@isNotEmpty(termAddr)"> and term_Addr = #{termAddr}</if>
      <if test="@Ognl@isNotEmpty(orgId)"> and org_Id = #{orgId}</if>
    </where>
  </sql>
  <select id="count" resultType="long">
    select count(*) from g_tg, c_term
    <include refid="realTimeReadingInfoDynamicWhere" />
  </select>
  <!--
    分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
  -->
  <select id="pageSelect" resultMap="RealTimeReadingInfoResult">
    select
    <include refid="realTimeReadingInfoColumns" />
    from user_table_xx
    <include refid="realTimeReadingInfoDynamicWhere" />
    <if test="sortColumns != null and sortColumns.length() != 0"> ORDER BY ${sortColumns}</if>
  </select>
</mapper>