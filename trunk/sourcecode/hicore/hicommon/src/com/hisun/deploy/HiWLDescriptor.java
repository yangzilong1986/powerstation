package com.hisun.deploy;

import com.hisun.exception.HiException;
import com.hisun.hilog4j.Logger;
import com.hisun.util.HiResource;
import com.hisun.util.HiStringManager;
import org.dom4j.Element;

import java.io.*;
import java.net.URL;

public class HiWLDescriptor implements HiDeploymentDescriptor {
    private Element ejb_jar_root;
    private Element weblogic_ext_root;
    private Logger log;
    final HiStringManager sm;

    public HiWLDescriptor() {
        this.ejb_jar_root = null;

        this.weblogic_ext_root = null;

        this.sm = HiStringManager.getManager();
    }

    public void setLog(Logger log) {
        this.log = log;
    }

    public void createDescriptor(String serviceName, String destPath) {
        createByTemplate(serviceName, destPath);
    }

    private void init() throws HiException {
    }

    private void createByTemplate(String serviceName, String destPath) {
        String ejb_jar_template = "template/weblogic/template-ejb-jar.xml";
        String weblogic_ejb_jar_template = "template/weblogic/template-weblogic-ejb-jar.xml";

        replFileText(ejb_jar_template, destPath + "ejb-jar.xml", serviceName);
        replFileText(weblogic_ejb_jar_template, destPath + "weblogic-ejb-jar.xml", serviceName);
    }

    private void replFileText(String templateFile, String outFile, String serviceName) {
        BufferedReader in = null;

        PrintWriter out = null;
        String fromStr = "#var_name#";

        URL fileUrl = HiResource.getResource(templateFile);
        try {
            in = new BufferedReader(new FileReader(fileUrl.getFile()));
            out = new PrintWriter(new FileWriter(outFile, false));

            String line = in.readLine();
            while (line != null) {
                line = line.replaceAll(fromStr, serviceName);
                out.println(line);

                line = in.readLine();
            }
            out.close();
            in = null;
            out = null;
        } catch (FileNotFoundException e) {
            System.out.println("Error: File [" + fileUrl.getFile() + "] not find!");

            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void fwDescriptor(String serivceName, String destPath) {
        try {
            FileWriter fw = new FileWriter(destPath + "ejb-jar.xml");
            fw.write("<?xml version='1.0' encoding='UTF-8'?>\n");
            fw.write("<!DOCTYPE ejb-jar PUBLIC '-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN' 'http://java.sun.com/dtd/ejb-jar_2_0.dtd'>\n");
            fw.write("<ejb-jar>\n");
            fw.write("  <description> <![CDATA[No Description.]]></description>\n");
            fw.write("  <display-name>" + serivceName + "_EJB</display-name>\n");
            fw.write("  <enterprise-beans>\n");
            fw.write("    <session>\n");
            fw.write("      <ejb-name>" + serivceName + "</ejb-name>\n");
            fw.write("      <home>com.hisun.dispatcher.interfaces.HiRouterInHome</home>\n");
            fw.write("      <remote>com.hisun.dispatcher.interfaces.HiRouterIn</remote>\n");
            fw.write("      <ejb-class>com.hisun.dispatcher.ejb.HiRouterInSession</ejb-class>\n");
            fw.write("      <session-type>Stateless</session-type>\n");
            fw.write("      <transaction-type>Bean</transaction-type>\n");
            fw.write("      <env-entry>\n");
            fw.write("        <env-entry-name>ServerName</env-entry-name>\n");
            fw.write("        <env-entry-type>java.lang.String</env-entry-type>\n");
            fw.write("        <env-entry-value>" + serivceName + "</env-entry-value>\n");
            fw.write("      </env-entry>\n");
            fw.write("      <env-entry>\n");
            fw.write("        <env-entry-name>ServerConfig</env-entry-name>\n");
            fw.write("        <env-entry-type>java.lang.String</env-entry-type>\n");
            fw.write("        <env-entry-value>etc/" + serivceName + "_ATR.XML</env-entry-value>\n");
            fw.write("      </env-entry>\n");
            fw.write("    </session>\n");
            fw.write("  </enterprise-beans>\n");
            fw.write("</ejb-jar>\n");
            fw.flush();
            fw.close();

            fw = null;
            fw = new FileWriter(destPath + "weblogic-ejb-jar.xml");
            fw.write("<?xml version='1.0' encoding='UTF-8'?>\n");
            fw.write("<!DOCTYPE weblogic-ejb-jar PUBLIC '-//BEA Systems, Inc.//DTD WebLogic 8.1.0 EJB//EN' 'http://www.bea.com/servers/wls810/dtd/weblogic-ejb-jar.dtd'>\n");
            fw.write("<weblogic-ejb-jar>\n");
            fw.write("  <description> <![CDATA[Generated by XDoclet]]> </description>\n");
            fw.write("  <weblogic-enterprise-bean>\n");
            fw.write("  <ejb-name>" + serivceName + "</ejb-name>\n");
            fw.write("  <enable-call-by-reference>True</enable-call-by-reference>\n");
            fw.write("  <jndi-name>ibs/ejb/" + serivceName + "</jndi-name>\n");
            fw.write("  </weblogic-enterprise-bean>\n");
            fw.write("</weblogic-ejb-jar>\n");
            fw.flush();
            fw.close();
            fw = null;
        } catch (IOException e) {
        }
    }
}